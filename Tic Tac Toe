
xs = 0
ys = 0

while True:
    import random
    
    def pattern(xstate , zstate):  # display grid before starting the game.
        one = 'X' if xstate[1] else ('O' if zstate[1] else 1)
        two = 'X' if xstate[2] else ('O' if zstate[2] else 2)
        three = 'X' if xstate[3] else ('O' if zstate[3] else 3)
        four = 'X' if xstate[4] else ('O' if zstate[4] else 4)
        five = 'X' if xstate[5] else ('O' if zstate[5] else 5)
        six = 'X' if xstate[6] else ('O' if zstate[6] else 6)
        seven = 'X' if xstate[7] else ('O' if zstate[7] else 7)
        eight = 'X' if xstate[8] else ('O' if zstate[8] else 8)
        nine = 'X' if xstate[9] else ('O' if zstate[9] else 9)
        
        print(f" {one} | {two} | {three} ")
        print(f" --|---|---")
        print(f" {four} | {five} | {six}  ")
        print(f" --|---|---")
        print(f" {seven} | {eight} | {nine} ")
    
    
    def sum(a, b, c):  # we create this function as sum can only takes two arguments but
        # in check_win() we have given three argumenets.
        return a + b + c
    
    
    def grid(xstate, zstate):  # display grid when in game
        # using f strings
        
        one = 'X' if xstate[1] else ('O' if zstate[1] else " " )
        two = 'X' if xstate[2] else ('O' if zstate[2] else " ")
        three = 'X' if xstate[3] else ('O' if zstate[3] else " ")
        four = 'X' if xstate[4] else ('O' if zstate[4] else " ")
        five = 'X' if xstate[5] else ('O' if zstate[5] else " ")
        six = 'X' if xstate[6] else ('O' if zstate[6] else " ")
        seven = 'X' if xstate[7] else ('O' if zstate[7] else " ")
        eight = 'X' if xstate[8] else ('O' if zstate[8] else " ")
        nine = 'X' if xstate[9] else ('O' if zstate[9] else  " ")
        
        print(f" {one} | {two} | {three} ")
        print(f" --|---|---")
        print(f" {four} | {five} | {six}  ")
        print(f" --|---|---")
        print(f" {seven} | {eight} | {nine} ")
    
    
    xstate = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    zstate = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    l = [1, 2, 3, 4, 5, 6, 7, 8, 9]
    turn = 1
    print("Following is the grid format")
    print()
    pattern(xstate,zstate)
    print()
    
    
    def check_win(xstate, zstate, ys, xs):
        # these all are the possible values in which X/Y can win  the game.
        
        wins = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 4, 7], [2, 5, 8], [3, 6, 9], [1, 5, 9], [3, 5, 7]]
        for i in wins:
            if (sum(xstate[i[0]], xstate[i[1]], xstate[i[2]])) == 3:
                grid(xstate,zstate)
                print("X wins")
                print("Match over")
                return 1
            if (sum(zstate[i[0]], zstate[i[1]], zstate[i[2]])) == 3:
                grid(xstate, zstate)
                print("Y wins")
                print("Match over")
                return 0
        
        return -1
    
    
    
    while True:
        grid(xstate, zstate)
        print()
        if turn == 1:
            x = int(input(("X's chance : ")))
            l.remove(x)  # so that computer should not repeat X's move
            xstate[x] = 1  # this statement make changes in the grid.
        else:
            y = random.choice(l)
            l.remove(y)  # So that computer should not repeat its move.
            print(f"Computer chooses : {y}")
            zstate[y] = 1  # this statement make changes in the grid.
        c = check_win(xstate, zstate, ys, xs)
        if c==1:
            xs+=1
        if c==0:
            ys+=1
        if c != -1:
            break  # checking weather the game is draw or not. If yes then break.
        
        turn = 1 - turn
    ch=input("You want to play more matches. Yes/No:")
    if ch=="No":
        print("X score:",xs)
        print("Y score:", ys)
        break
    elif ch=="no":
        print("X score:", xs)
        print("Y score:", ys)
        break
        
